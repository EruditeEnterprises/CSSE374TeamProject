digraph G {
fontname = " Bitstream Vera San"
fontsize =8
node [
fontname = "Bitstream Vera Sans"
fontsize =8
shape = "record"]
edge [
fontname = "Bitstream Vera Sans"
fontsize =8
]
AbstractClassDataVisitor [
label = "{AbstractClassDataVisitor|# classData : ClassData\l|+ init(int, AbstractClassDataVisitor) : void\l+ getClassData() : ClassData\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
AbstractClassDataVisitor -> ClassData
edge [ 
arrowhead = "vee"
style = "solid"
]
AbstractClassDataVisitor -> ClassData
ClassData [
label = "{ClassData|- name : String\l- superClass : String\l- interfaces : List String\l- fields : List FieldData\l- methods : List MethodData\l- usedClasses : Set String\l- associatedClasses : Set String\l|+ init() : void\l+ getName() : String\l+ setName(String) : void\l+ getSuperClass() : String\l+ setSuperClass(String) : void\l+ getInterfaces(, ) : List String\l+ setInterfaces(List String ) : void\l+ addField(FieldData) : void\l+ getFields(, ) : List FieldData\l+ addMethod(MethodData) : void\l+ getMethods(, ) : List MethodData\l+ toString() : String\l+ getInheritsArrows() : String\l+ getExtendsArrow(List String ) : String\l+ getUsesArrows(List String ) : String\l+ getAssociationArrows(List String ) : String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
ClassData -> FieldData
ClassData -> MethodData
edge [ 
arrowhead = "vee"
style = "solid"
]
ClassData -> FieldData
ClassData -> MethodData
ClassDeclarationVisitor [
label = "{ClassDeclarationVisitor||+ init(int, AbstractClassDataVisitor) : void\l+ visit(int, int, String, String, String, String[]) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassDeclarationVisitor -> AbstractClassDataVisitor
ClassFieldVisitor [
label = "{ClassFieldVisitor|- level : String\l|+ init(int, AbstractClassDataVisitor) : void\l+ visitField(int, String, String, String, Object) : FieldVisitor\l+ addAccessLevel(int) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassFieldVisitor -> AbstractClassDataVisitor
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
ClassMethodVisitor [
label = "{ClassMethodVisitor|- level : String\l|+ init(int, AbstractClassDataVisitor) : void\l+ visitMethod(int, String, String, String, String[]) : MethodVisitor\l+ addAccessLevel(int) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassMethodVisitor -> AbstractClassDataVisitor
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
DesignParser [
label = "{DesignParser|+ FOLDER_PATH : String\l+ FILE_PREFIX : String\l|+ init() : void\l+ main(String[]) : void\l+ getClasses(String, String) : List String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
FieldData [
label = "{FieldData|- fieldName : String\l- signature : String\l- access : String\l- type : Type\l|+ init(String, String, Type, String) : void\l+ getSignature() : String\l+ setSignature(String) : void\l+ getFieldName() : String\l+ getAccessLevel() : String\l+ getType() : Type\l+ toString() : String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
GraphVisPrinter [
label = "{GraphVisPrinter||+ init() : void\l+ makeUML(String, List ClassData ) : void\l+ getClassNames(List ClassData ) : List String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
GraphVisPrinter -> ClassData
MethodData [
label = "{MethodData|- name : String\l- type : Type\l- access : String\l- args : Type[]\l- signature : String\l|+ init(String, Type, String, Type[], String) : void\l+ getSignature() : String\l+ setSignature(String) : void\l+ getName() : String\l+ setName(String) : void\l+ getType() : Type\l+ setType(Type) : void\l+ getAccess() : String\l+ setAccess(String) : void\l+ getArgs() : Type[]\l+ setArgs(Type[]) : void\l+ toString() : String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
}
