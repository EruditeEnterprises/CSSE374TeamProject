digraph G {
fontname = " Bitstream Vera San"
fontsize =8
node [
fontname = "Bitstream Vera Sans"
fontsize =8
shape = "record"]
edge [
fontname = "Bitstream Vera Sans"
fontsize =8
]
AbstractClassDataVisitor [
label = "{AbstractClassDataVisitor|# classData : IData\l|+ init(int, AbstractClassDataVisitor) : void\l+ getClassData() : ClassData\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
AbstractClassDataVisitor -> ClassData
edge [ 
arrowhead = "vee"
style = "solid"
]
AbstractClassDataVisitor -> IData
ClassData [
label = "{ClassData|- name : String\l- superClass : String\l- interfaces : List String\l- fields : List IData\l- methods : List IData\l- usedClasses : Set String\l- associatedClasses : Set String\l|+ init() : void\l+ getName() : String\l+ setName(String) : void\l+ getSuperClass() : String\l+ setSuperClass(String) : void\l+ getInterfaces(, ) : List String\l+ setInterfaces(List String ) : void\l+ addField(FieldData) : void\l+ getFields(, ) : List IData\l+ addMethod(MethodData) : void\l+ getMethods(, ) : List IData\l+ toString() : String\l+ getInheritsArrows() : String\l+ getExtendsArrow(List String ) : String\l+ getUsesArrows(List String ) : String\l+ getAssociationArrows(List String ) : String\l+ setSignature(String) : void\l+ getSignature() : String\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
ClassData -> IClassData
edge [ 
arrowhead = "vee"
style = "dashed"
]
ClassData -> IData
edge [ 
arrowhead = "vee"
style = "solid"
]
ClassData -> IData
ClassDeclarationVisitor [
label = "{ClassDeclarationVisitor||+ init(int, AbstractClassDataVisitor) : void\l+ visit(int, int, String, String, String, String[]) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassDeclarationVisitor -> AbstractClassDataVisitor
ClassFieldVisitor [
label = "{ClassFieldVisitor|- level : String\l|+ init(int, AbstractClassDataVisitor) : void\l+ visitField(int, String, String, String, Object) : FieldVisitor\l+ addAccessLevel(int) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassFieldVisitor -> AbstractClassDataVisitor
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
ClassMethodVisitor [
label = "{ClassMethodVisitor|- level : String\l|+ init(int, AbstractClassDataVisitor) : void\l+ visitMethod(int, String, String, String, String[]) : MethodVisitor\l+ addAccessLevel(int) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "solid"
]
ClassMethodVisitor -> AbstractClassDataVisitor
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
DesignParser [
label = "{DesignParser|+ FOLDER_PATH : String\l+ FILE_PREFIX : String\l+ OUTPUT_FILE : String\l|+ init() : void\l+ main(String[]) : void\l}"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
FieldData [
label = "{FieldData|- fieldName : String\l- signature : String\l- access : String\l- type : Type\l|+ init(String, String, Type, String) : void\l+ getSignature() : String\l+ setSignature(String) : void\l+ getName() : String\l+ getAccessLevel() : String\l+ getType() : Type\l+ toString() : String\l+ setName(String) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
FieldData -> IFieldData
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
GraphVisPrinter [
label = "{GraphVisPrinter||+ init() : void\l+ printToFile(String, List ClassData ) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
GraphVisPrinter -> IClassStructurePrinter
edge [ 
arrowhead = "vee"
style = "dashed"
]
GraphVisPrinter -> ClassData
IClassData [
label = "{IClassData||+ setSuperClass(String) : void\l+ getSuperClass() : String\l+ getInterfaces(, ) : List String\l+ setInterfaces(List String ) : void\l+ addField(FieldData) : void\l+ getFields(, ) : List IData\l+ addMethod(MethodData) : void\l+ getMethods(, ) : List IData\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
IClassData -> IData
edge [ 
arrowhead = "vee"
style = "dashed"
]
IClassData -> IData
IClassStructurePrinter [
label = "{IClassStructurePrinter||+ printToFile(String, List ClassData ) : void\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
IClassStructurePrinter -> ClassData
IData [
label = "{IData||+ setSignature(String) : void\l+ getSignature() : String\l+ setName(String) : void\l+ getName() : String\l+ toString() : String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
IFieldData [
label = "{IFieldData||+ getAccessLevel() : String\l+ getType() : Type\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
IFieldData -> IData
edge [ 
arrowhead = "vee"
style = "dashed"
]
IMethodData [
label = "{IMethodData||+ getType() : Type\l+ setType(Type) : void\l+ getAccess() : String\l+ setAccess(String) : void\l+ getArgs() : Type[]\l+ setArgs(Type[]) : void\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
IMethodData -> IData
edge [ 
arrowhead = "vee"
style = "dashed"
]
IParser [
label = "{IParser||+ parseClassName(String) : String\l+ parametersFromSignature(String) : List String\l+ returnTypeFromSignature(String) : String\l+ fieldTypeFromSignature(String) : String\l+ getClassNames(List ClassData ) : List String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
IParser -> ClassData
MethodData [
label = "{MethodData|- name : String\l- type : Type\l- access : String\l- args : Type[]\l- signature : String\l|+ init(String, Type, String, Type[], String) : void\l+ getSignature() : String\l+ setSignature(String) : void\l+ getName() : String\l+ setName(String) : void\l+ getType() : Type\l+ setType(Type) : void\l+ getAccess() : String\l+ setAccess(String) : void\l+ getArgs() : Type[]\l+ setArgs(Type[]) : void\l+ toString() : String\l}"
]
edge [ 
arrowhead = "empty"
style = "dashed"
]
MethodData -> IMethodData
edge [ 
arrowhead = "vee"
style = "dashed"
]
edge [ 
arrowhead = "vee"
style = "solid"
]
StringParser [
label = "{StringParser||+ init() : void\l+ parseClassName(String) : String\l+ parametersFromSignature(String) : List String\l+ returnTypeFromSignature(String) : String\l+ fieldTypeFromSignature(String) : String\l+ getClassNames(List ClassData ) : List String\l}"
]
edge [ 
arrowhead = "vee"
style = "dashed"
]
StringParser -> ClassData
}
